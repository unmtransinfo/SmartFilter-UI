{"ast":null,"code":"var _jsxFileName = \"/Users/bspanthi/Documents/SmartFilter-UI/smarts-filter-ui/src/components/SmartsFilterResult.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MolImage from \"./MolImage\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst exportToCSV = data => {\n  if (data.length === 0) return;\n  const headers = [\"Name\", \"SMILES\", \"Filter\", \"Result\"];\n  const rows = data.map(item => [item.name, item.SMILES, item.filterName || \"Custom\", item.failed ? \"Fail\" : \"Pass\"]);\n  const csvContent = \"data:text/csv;charset=utf-8,\" + [headers, ...rows].map(e => e.map(field => `\"${(field || \"\").toString().replace(/\"/g, '\"\"')}\"`).join(\",\")).join(\"\\n\");\n  const encodedUri = encodeURI(csvContent);\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"href\", encodedUri);\n  link.setAttribute(\"download\", \"smarts_filter_results.csv\");\n  document.body.appendChild(link); // Required for Firefox\n  link.click();\n  document.body.removeChild(link);\n};\nconst SmartsFilterResult = ({\n  matchCounts,\n  batch,\n  view,\n  includePasses,\n  includeFails\n}) => {\n  _s();\n  // Filter results according to includePasses and includeFails\n  const filteredResults = matchCounts.filter(item => {\n    if (item.failed && !includeFails) return false;\n    if (!item.failed && !includePasses) return false;\n    return true;\n  });\n\n  // Group filtered results if batch mode is on\n  const grouped = batch ? filteredResults.reduce((acc, item) => {\n    const group = item.filterName || \"Custom\";\n    if (!acc[group]) acc[group] = [];\n    acc[group].push(item);\n    return acc;\n  }, {}) : {};\n\n  // Pagination states for global (non-batch) mode\n  const [globalPage, setGlobalPage] = useState(1);\n  const [globalRowsPerPage, setGlobalRowsPerPage] = useState(5);\n\n  // Pagination states for each group in batch mode\n  const [groupStates, setGroupStates] = useState({});\n\n  // Pagination controls for batch groups\n  const handleGroupPageChange = (key, direction) => {\n    setGroupStates(prev => {\n      const current = prev[key] || {\n        page: 1,\n        rowsPerPage: 5\n      };\n      const total = Math.ceil(grouped[key].length / current.rowsPerPage);\n      const nextPage = direction === \"next\" ? current.page + 1 : current.page - 1;\n      return {\n        ...prev,\n        [key]: {\n          ...current,\n          page: Math.max(1, Math.min(nextPage, total))\n        }\n      };\n    });\n  };\n  const handleGroupRowsChange = (key, value) => {\n    setGroupStates(prev => ({\n      ...prev,\n      [key]: {\n        ...(prev[key] || {\n          page: 1\n        }),\n        rowsPerPage: value,\n        page: 1\n      }\n    }));\n  };\n\n  // Pagination controls for global\n  const handleGlobalPageChange = direction => {\n    const totalPages = Math.ceil(filteredResults.length / globalRowsPerPage);\n    const newPage = direction === \"next\" ? globalPage + 1 : globalPage - 1;\n    setGlobalPage(Math.max(1, Math.min(newPage, totalPages)));\n  };\n  const handleGlobalRowsChange = e => {\n    setGlobalRowsPerPage(Number(e.target.value));\n    setGlobalPage(1);\n  };\n\n  // Open molecule analysis in a new tab\n  const openAnalyzeNewTab = result => {\n    const key = `analyze_data_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    sessionStorage.setItem(key, JSON.stringify(result));\n    const url = `/analyze?key=${key}`;\n    window.open(url, \"_blank\");\n  };\n  if (matchCounts.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Results (\", filteredResults.length, \" molecules processed)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success\",\n        onClick: () => exportToCSV(filteredResults),\n        children: \"Export to CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), !batch && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-hover table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), view && /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Structure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredResults.slice((globalPage - 1) * globalRowsPerPage, globalPage * globalRowsPerPage).map((result, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: result.failed ? \"table-danger\" : \"table-success\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: (globalPage - 1) * globalRowsPerPage + idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this), view && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(MolImage, {\n                  smiles: result.SMILES\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: result.filterName || \"Custom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: result.failed ? \"Fail\" : \"Pass\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary\",\n                  onClick: () => openAnalyzeNewTab(result),\n                  children: \"Analyze\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-3 flex-wrap gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            onClick: () => handleGlobalPageChange(\"prev\"),\n            disabled: globalPage === 1,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary ms-2\",\n            onClick: () => handleGlobalPageChange(\"next\"),\n            disabled: globalPage * globalRowsPerPage >= filteredResults.length,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Page \", globalPage, \" of\", \" \", Math.ceil(filteredResults.length / globalRowsPerPage)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rowsPerPageSelect\",\n            className: \"mb-0\",\n            children: \"Show entries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"rowsPerPageSelect\",\n            className: \"form-select form-select-sm\",\n            style: {\n              width: \"auto\"\n            },\n            value: globalRowsPerPage,\n            onChange: handleGlobalRowsChange,\n            children: [5, 6, 7, 8, 9, 10].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num,\n              children: num\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), batch && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: Object.entries(grouped).map(([group, items], groupIdx) => {\n        const {\n          page = 1,\n          rowsPerPage = 5\n        } = groupStates[group] || {};\n        const start = (page - 1) * rowsPerPage;\n        const current = items.slice(start, start + rowsPerPage);\n        const failedCount = items.filter(x => x.failed).length;\n        return /*#__PURE__*/_jsxDEV(\"details\", {\n          open: true,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: [group, \" (\", failedCount, \" hit\", failedCount !== 1 ? \"s\" : \"\", \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"table-dark\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this), view && /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Structure\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 34\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Molecule Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: current.map((result, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: result.failed ? \"table-danger\" : \"table-success\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: start + idx + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 27\n                  }, this), view && /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(MolImage, {\n                      smiles: result.SMILES\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: result.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: result.failed ? \"Fail\" : \"Pass\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-sm btn-outline-primary\",\n                      onClick: () => openAnalyzeNewTab(result),\n                      children: \"Analyze\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 27\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center mt-2 flex-wrap gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                onClick: () => handleGroupPageChange(group, \"prev\"),\n                disabled: page === 1,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary ms-2\",\n                onClick: () => handleGroupPageChange(group, \"next\"),\n                disabled: start + rowsPerPage >= items.length,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Page \", page, \" of \", Math.ceil(items.length / rowsPerPage)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `rows-${group}`,\n                className: \"mb-0\",\n                children: \"Show entries:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: `rows-${group}`,\n                className: \"form-select form-select-sm\",\n                style: {\n                  width: \"auto\"\n                },\n                value: rowsPerPage,\n                onChange: e => handleGroupRowsChange(group, Number(e.target.value)),\n                children: [5, 6, 7, 8, 9, 10].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: num,\n                  children: num\n                }, num, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this)]\n        }, groupIdx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(SmartsFilterResult, \"HNINtBLUIfd1eNmi0LGh3JLIHHI=\");\n_c = SmartsFilterResult;\nexport default SmartsFilterResult;\nvar _c;\n$RefreshReg$(_c, \"SmartsFilterResult\");","map":{"version":3,"names":["React","useState","MolImage","jsxDEV","_jsxDEV","Fragment","_Fragment","exportToCSV","data","length","headers","rows","map","item","name","SMILES","filterName","failed","csvContent","e","field","toString","replace","join","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","removeChild","SmartsFilterResult","matchCounts","batch","view","includePasses","includeFails","_s","filteredResults","filter","grouped","reduce","acc","group","push","globalPage","setGlobalPage","globalRowsPerPage","setGlobalRowsPerPage","groupStates","setGroupStates","handleGroupPageChange","key","direction","prev","current","page","rowsPerPage","total","Math","ceil","nextPage","max","min","handleGroupRowsChange","value","handleGlobalPageChange","totalPages","newPage","handleGlobalRowsChange","Number","target","openAnalyzeNewTab","result","Date","now","random","substr","sessionStorage","setItem","JSON","stringify","url","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","idx","smiles","disabled","htmlFor","id","style","width","onChange","num","Object","entries","items","groupIdx","start","failedCount","x","_c","$RefreshReg$"],"sources":["/Users/bspanthi/Documents/SmartFilter-UI/smarts-filter-ui/src/components/SmartsFilterResult.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { MatchResult } from \"../HomePage\";\nimport MolImage from \"./MolImage\";\n\nconst exportToCSV = (data: MatchResult[]) => {\n  if (data.length === 0) return;\n\n  const headers = [\"Name\", \"SMILES\", \"Filter\", \"Result\"];\n  const rows = data.map((item) => [\n    item.name,\n    item.SMILES,\n    item.filterName || \"Custom\",\n    item.failed ? \"Fail\" : \"Pass\",\n  ]);\n\n  const csvContent =\n    \"data:text/csv;charset=utf-8,\" +\n    [headers, ...rows]\n      .map((e) =>\n        e\n          .map((field) => `\"${(field || \"\").toString().replace(/\"/g, '\"\"')}\"`)\n          .join(\",\")\n      )\n      .join(\"\\n\");\n\n  const encodedUri = encodeURI(csvContent);\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"href\", encodedUri);\n  link.setAttribute(\"download\", \"smarts_filter_results.csv\");\n  document.body.appendChild(link); // Required for Firefox\n  link.click();\n  document.body.removeChild(link);\n};\n\ninterface SmartsFilterResultProps {\n  matchCounts: MatchResult[];\n  mode: string;\n  totalMatched: number;\n  batch: boolean;\n  view: boolean;\n  includePasses: boolean;\n  includeFails: boolean;\n}\n\nconst SmartsFilterResult: React.FC<SmartsFilterResultProps> = ({\n  matchCounts,\n  batch,\n  view,\n  includePasses,\n  includeFails,\n}) => {\n  // Filter results according to includePasses and includeFails\n  const filteredResults = matchCounts.filter((item) => {\n    if (item.failed && !includeFails) return false;\n    if (!item.failed && !includePasses) return false;\n    return true;\n  });\n\n  // Group filtered results if batch mode is on\n  const grouped = batch\n    ? filteredResults.reduce((acc, item) => {\n        const group = item.filterName || \"Custom\";\n        if (!acc[group]) acc[group] = [];\n        acc[group].push(item);\n        return acc;\n      }, {} as Record<string, MatchResult[]>)\n    : {};\n\n  // Pagination states for global (non-batch) mode\n  const [globalPage, setGlobalPage] = useState(1);\n  const [globalRowsPerPage, setGlobalRowsPerPage] = useState(5);\n\n  // Pagination states for each group in batch mode\n  const [groupStates, setGroupStates] = useState<\n    Record<string, { page: number; rowsPerPage: number }>\n  >({});\n\n  // Pagination controls for batch groups\n  const handleGroupPageChange = (\n    key: string,\n    direction: \"next\" | \"prev\"\n  ) => {\n    setGroupStates((prev) => {\n      const current = prev[key] || { page: 1, rowsPerPage: 5 };\n      const total = Math.ceil(grouped[key].length / current.rowsPerPage);\n      const nextPage =\n        direction === \"next\" ? current.page + 1 : current.page - 1;\n      return {\n        ...prev,\n        [key]: {\n          ...current,\n          page: Math.max(1, Math.min(nextPage, total)),\n        },\n      };\n    });\n  };\n\n  const handleGroupRowsChange = (key: string, value: number) => {\n    setGroupStates((prev) => ({\n      ...prev,\n      [key]: {\n        ...(prev[key] || { page: 1 }),\n        rowsPerPage: value,\n        page: 1,\n      },\n    }));\n  };\n\n  // Pagination controls for global\n  const handleGlobalPageChange = (direction: \"next\" | \"prev\") => {\n    const totalPages = Math.ceil(filteredResults.length / globalRowsPerPage);\n    const newPage =\n      direction === \"next\" ? globalPage + 1 : globalPage - 1;\n    setGlobalPage(Math.max(1, Math.min(newPage, totalPages)));\n  };\n\n  const handleGlobalRowsChange = (\n    e: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    setGlobalRowsPerPage(Number(e.target.value));\n    setGlobalPage(1);\n  };\n\n  // Open molecule analysis in a new tab\n  const openAnalyzeNewTab = (result: MatchResult) => {\n    const key = `analyze_data_${Date.now()}_${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n    sessionStorage.setItem(key, JSON.stringify(result));\n    const url = `/analyze?key=${key}`;\n    window.open(url, \"_blank\");\n  };\n\n  if (matchCounts.length === 0) return null;\n\n  return (\n    <div className=\"container mt-4\">\n      <h3>Results ({filteredResults.length} molecules processed)</h3>\n      <div className=\"mb-3\">\n        <button\n          className=\"btn btn-outline-success\"\n          onClick={() => exportToCSV(filteredResults)}\n        >\n          Export to CSV\n        </button>\n      </div>\n\n      {!batch && (\n        <>\n          <div className=\"table-responsive\">\n            <table className=\"table table-striped table-hover table-bordered\">\n              <thead className=\"table-dark\">\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  {view && <th>Structure</th>}\n                  <th>Filter</th>\n                  <th>Result</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredResults\n                  .slice(\n                    (globalPage - 1) * globalRowsPerPage,\n                    globalPage * globalRowsPerPage\n                  )\n                  .map((result, idx) => (\n                    <tr\n                      key={idx}\n                      className={result.failed ? \"table-danger\" : \"table-success\"}\n                    >\n                      <td>\n                        {(globalPage - 1) * globalRowsPerPage + idx + 1}\n                      </td>\n                      <td>{result.name}</td>\n                      {view && (\n                        <td>\n                          <MolImage smiles={result.SMILES} />\n                        </td>\n                      )}\n                      <td>{result.filterName || \"Custom\"}</td>\n                      <td>{result.failed ? \"Fail\" : \"Pass\"}</td>\n                      <td>\n                        <button\n                          className=\"btn btn-sm btn-outline-primary\"\n                          onClick={() => openAnalyzeNewTab(result)}\n                        >\n                          Analyze\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className=\"d-flex justify-content-between align-items-center mt-3 flex-wrap gap-3\">\n            <div>\n              <button\n                className=\"btn btn-outline-secondary\"\n                onClick={() => handleGlobalPageChange(\"prev\")}\n                disabled={globalPage === 1}\n              >\n                Previous\n              </button>\n              <button\n                className=\"btn btn-outline-secondary ms-2\"\n                onClick={() => handleGlobalPageChange(\"next\")}\n                disabled={\n                  globalPage * globalRowsPerPage >= filteredResults.length\n                }\n              >\n                Next\n              </button>\n            </div>\n\n            <div>\n              Page {globalPage} of{\" \"}\n              {Math.ceil(filteredResults.length / globalRowsPerPage)}\n            </div>\n\n            <div className=\"d-flex align-items-center gap-2\">\n              <label htmlFor=\"rowsPerPageSelect\" className=\"mb-0\">\n                Show entries:\n              </label>\n              <select\n                id=\"rowsPerPageSelect\"\n                className=\"form-select form-select-sm\"\n                style={{ width: \"auto\" }}\n                value={globalRowsPerPage}\n                onChange={handleGlobalRowsChange}\n              >\n                {[5, 6, 7, 8, 9, 10].map((num) => (\n                  <option key={num} value={num}>\n                    {num}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </>\n      )}\n\n      {batch && (\n        <>\n          {Object.entries(grouped).map(([group, items], groupIdx) => {\n            const { page = 1, rowsPerPage = 5 } = groupStates[group] || {};\n            const start = (page - 1) * rowsPerPage;\n            const current = items.slice(start, start + rowsPerPage);\n            const failedCount = items.filter((x) => x.failed).length;\n\n            return (\n              <details key={groupIdx} open className=\"mt-4\">\n                <summary>\n                  {group} ({failedCount} hit{failedCount !== 1 ? \"s\" : \"\"})\n                </summary>\n\n                <div className=\"table-responsive mt-2\">\n                  <table className=\"table table-striped table-hover table-bordered\">\n                    <thead className=\"table-dark\">\n                      <tr>\n                        <th>#</th>\n                        {view && <th>Structure</th>}\n                        <th>Molecule Name</th>\n                        <th>Result</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {current.map((result, idx) => (\n                        <tr\n                          key={idx}\n                          className={\n                            result.failed ? \"table-danger\" : \"table-success\"\n                          }\n                        >\n                          <td>{start + idx + 1}</td>\n                          {view && (\n                            <td>\n                              <MolImage smiles={result.SMILES} />\n                            </td>\n                          )}\n                          <td>{result.name}</td>\n                          <td>{result.failed ? \"Fail\" : \"Pass\"}</td>\n                          <td>\n                            <button\n                              className=\"btn btn-sm btn-outline-primary\"\n                              onClick={() => openAnalyzeNewTab(result)}\n                            >\n                              Analyze\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n\n                <div className=\"d-flex justify-content-between align-items-center mt-2 flex-wrap gap-3\">\n                  <div>\n                    <button\n                      className=\"btn btn-outline-secondary\"\n                      onClick={() => handleGroupPageChange(group, \"prev\")}\n                      disabled={page === 1}\n                    >\n                      Previous\n                    </button>\n                    <button\n                      className=\"btn btn-outline-secondary ms-2\"\n                      onClick={() => handleGroupPageChange(group, \"next\")}\n                      disabled={start + rowsPerPage >= items.length}\n                    >\n                      Next\n                    </button>\n                  </div>\n\n                  <div>\n                    Page {page} of {Math.ceil(items.length / rowsPerPage)}\n                  </div>\n\n                  <div className=\"d-flex align-items-center gap-2\">\n                    <label htmlFor={`rows-${group}`} className=\"mb-0\">\n                      Show entries:\n                    </label>\n                    <select\n                      id={`rows-${group}`}\n                      className=\"form-select form-select-sm\"\n                      style={{ width: \"auto\" }}\n                      value={rowsPerPage}\n                      onChange={(e) =>\n                        handleGroupRowsChange(group, Number(e.target.value))\n                      }\n                    >\n                      {[5, 6, 7, 8, 9, 10].map((num) => (\n                        <option key={num} value={num}>\n                          {num}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </details>\n            );\n          })}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SmartsFilterResult;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}