{"ast":null,"code":"var _jsxFileName = \"/Users/bspanthi/Documents/SmartFilter-UI/smarts-filter-ui/src/components/MolImage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport initRDKitModule from \"@rdkit/rdkit\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MolImage = ({\n  smiles,\n  format = \"svg\",\n  width = \"100%\",\n  height = \"auto\",\n  highlightAtoms = []\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [RDKit, setRDKit] = useState(null);\n  const [svgData, setSvgData] = useState(\"\");\n  useEffect(() => {\n    const loadRDKit = async () => {\n      try {\n        const RDKitModule = await initRDKitModule({\n          locateFile: () => \"/RDKit_minimal.wasm\"\n        });\n        setRDKit(RDKitModule);\n        console.log(\"RDKit.js initialized in MolImage\");\n      } catch (err) {\n        console.error(\"RDKit.js init failed\", err);\n      }\n    };\n    loadRDKit();\n  }, []);\n  useEffect(() => {\n    if (!RDKit || typeof smiles !== \"string\" || smiles.trim() === \"\") {\n      setSvgData(\"\"); // Clear any old SVG if smiles invalid\n      return;\n    }\n    try {\n      const mol = RDKit.get_mol(smiles);\n      if (!mol) throw new Error(\"RDKit failed to parse molecule\");\n      if (format === \"png\" && canvasRef.current) {\n        const options = {};\n        if (highlightAtoms && highlightAtoms.length > 0) {\n          options.highlightAtoms = highlightAtoms;\n        }\n        mol.draw_to_canvas(canvasRef.current, options);\n        setSvgData(\"\"); // Clear SVG if using canvas\n      } else if (format === \"svg\") {\n        let svg = \"\";\n        if (highlightAtoms && highlightAtoms.length > 0) {\n          console.log(highlightAtoms);\n          svg = mol.get_svg_with_highlights(JSON.stringify({\n            atoms: highlightAtoms\n          }));\n        } else {\n          svg = mol.get_svg();\n        }\n        setSvgData(svg);\n      }\n      mol.delete();\n    } catch (err) {\n      console.warn(\"MolImage rendering failed for SMILES:\", smiles, err);\n      setSvgData(`<text x=\"10\" y=\"50\" fill=\"red\">⚠️ Invalid SMILES</text>`);\n    }\n  }, [RDKit, smiles, format, highlightAtoms]);\n  if (!smiles) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No SMILES provided\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !RDKit ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted\",\n      children: \"Loading molecule...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : format === \"png\" ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: typeof width === \"number\" ? width : 120,\n      height: typeof height === \"number\" ? height : 80\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: svgData\n      },\n      style: {\n        width: typeof width === \"string\" ? width : `${width}px`,\n        height: typeof height === \"string\" ? height : `${height}px`,\n        overflow: \"hidden\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(MolImage, \"FrUjPB++adKo8YTgPn3brbdE+ks=\");\n_c = MolImage;\nexport default MolImage;\nvar _c;\n$RefreshReg$(_c, \"MolImage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","initRDKitModule","jsxDEV","_jsxDEV","Fragment","_Fragment","MolImage","smiles","format","width","height","highlightAtoms","_s","canvasRef","RDKit","setRDKit","svgData","setSvgData","loadRDKit","RDKitModule","locateFile","console","log","err","error","trim","mol","get_mol","Error","current","options","length","draw_to_canvas","svg","get_svg_with_highlights","JSON","stringify","atoms","get_svg","delete","warn","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","dangerouslySetInnerHTML","__html","style","overflow","_c","$RefreshReg$"],"sources":["/Users/bspanthi/Documents/SmartFilter-UI/smarts-filter-ui/src/components/MolImage.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport initRDKitModule from \"@rdkit/rdkit\";\n\ntype MolImageProps = {\n  smiles: string;\n  format?: \"svg\" | \"png\";\n  width?: number | string;\n  height?: number | string;\n  highlightAtoms?: number[];\n};\n\nconst MolImage: React.FC<MolImageProps> = ({\n  smiles,\n  format = \"svg\",\n  width = \"100%\",\n  height = \"auto\",\n  highlightAtoms = [],\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [RDKit, setRDKit] = useState<any>(null);\n  const [svgData, setSvgData] = useState<string>(\"\");\n\n  useEffect(() => {\n    const loadRDKit = async () => {\n      try {\n        const RDKitModule = await initRDKitModule({\n          locateFile: () => \"/RDKit_minimal.wasm\",\n        });\n        setRDKit(RDKitModule);\n        console.log(\"RDKit.js initialized in MolImage\");\n      } catch (err) {\n        console.error(\"RDKit.js init failed\", err);\n      }\n    };\n    loadRDKit();\n  }, []);\n\nuseEffect(() => {\n  if (\n    !RDKit ||\n    typeof smiles !== \"string\" || \n    smiles.trim() === \"\"\n  ) {\n    setSvgData(\"\"); // Clear any old SVG if smiles invalid\n    return;\n  }\n\n  try {\n    const mol = RDKit.get_mol(smiles);\n    \n    if (!mol) throw new Error(\"RDKit failed to parse molecule\");\n    if (format === \"png\" && canvasRef.current) {\n      const options: any = {};\n      if (highlightAtoms && highlightAtoms.length > 0) {\n        options.highlightAtoms = highlightAtoms;\n      }\n      mol.draw_to_canvas(canvasRef.current, options);\n      setSvgData(\"\"); // Clear SVG if using canvas\n    } else if (format === \"svg\") {\n      let svg = \"\";\n    if (highlightAtoms && highlightAtoms.length > 0) {\n    console.log(highlightAtoms)\n    svg = mol.get_svg_with_highlights(  JSON.stringify({\n    atoms: highlightAtoms,\n  }));\n    \n    } else {\n        \n    svg = mol.get_svg();\n    }\n\n\n      setSvgData(svg);\n    }\n\n    mol.delete();\n  } catch (err) {\n    \n    console.warn(\"MolImage rendering failed for SMILES:\", smiles, err);\n    setSvgData(`<text x=\"10\" y=\"50\" fill=\"red\">⚠️ Invalid SMILES</text>`);\n  }\n}, [RDKit, smiles, format, highlightAtoms]);\n\n\n\n  if (!smiles) return <p>No SMILES provided</p>;\n\n  return (\n    <>\n      {!RDKit ? (\n        <p className=\"text-muted\">Loading molecule...</p>\n      ) : format === \"png\" ? (\n        <canvas\n          ref={canvasRef}\n          width={typeof width === \"number\" ? width : 120}\n          height={typeof height === \"number\" ? height : 80}\n        />\n      ) : (\n        <div\n          dangerouslySetInnerHTML={{ __html: svgData }}\n          style={{\n            width: typeof width === \"string\" ? width : `${width}px`,\n            height: typeof height === \"string\" ? height : `${height}px`,\n            overflow: \"hidden\",\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MolImage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}